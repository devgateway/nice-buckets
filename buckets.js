// Generated by CoffeeScript 1.7.1
(function() {
  var magic, minFigs, root;

  magic = function(stops, range, intervals) {
    var bucket, highest, interval, lowest, magnitude, max, min, n, smallest, _i, _j, _len, _ref, _results;
    if (intervals == null) {
      intervals = [1, 1.2, 1.5, 1.6, 2, 2.5, 3, 5, 8];
    }
    lowest = range[0], highest = range[1];
    smallest = (highest - lowest) / stops;
    magnitude = Math.pow(10, Math.floor((Math.log(smallest)) / Math.log(10)));
    for (_i = 0, _len = intervals.length; _i < _len; _i++) {
      interval = intervals[_i];
      bucket = interval * magnitude;
      if (bucket < smallest) {
        continue;
      }
      min = bucket * (Math.floor(lowest / bucket));
      max = min + (bucket * stops);
      if (max >= highest) {
        break;
      }
    }
    _results = [];
    for (n = _j = 0, _ref = stops - 1; 0 <= _ref ? _j <= _ref : _j >= _ref; n = 0 <= _ref ? ++_j : --_j) {
      _results.push((function(m) {
        return [m, m + bucket];
      })(min + bucket * n));
    }
    return _results;
  };

  minFigs = function(stops, range, maxOut, base) {
    var bucket, highest, k, lowest, max_overlap, min, n, r, _i, _ref, _results;
    if (maxOut == null) {
      maxOut = 0.99;
    }
    if (base == null) {
      base = 10;
    }
    lowest = range[0], highest = range[1];
    bucket = (highest - lowest) / stops;
    max_overlap = maxOut * bucket;
    k = Math.pow(base, Math.floor((Math.log(max_overlap)) / Math.log(base)));
    min = k * Math.floor(lowest / k);
    bucket += (lowest - min) / stops;
    k = Math.pow(base, Math.floor(Math.log(max_overlap / stops, base)));
    bucket = (Math.ceil(bucket / k)) * k;
    r = function(n) {
      return Math.round(n / k) / (1 / k);
    };
    _results = [];
    for (n = _i = 0, _ref = stops - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; n = 0 <= _ref ? ++_i : --_i) {
      _results.push((function(m) {
        return [r(m), r(m + bucket)];
      })(min + bucket * n));
    }
    return _results;
  };

  root = {
    magic: magic,
    minFigs: minFigs
  };

  if (!((typeof module !== "undefined" && module !== null) || (typeof requirejs !== "undefined" && requirejs !== null))) {
    this.buckets = root;
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = root;
  }

  if ((typeof requirejs !== "undefined" && requirejs !== null) && (typeof define !== "undefined" && define !== null)) {
    define(root);
  }

}).call(this);
